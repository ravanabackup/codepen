::-webkit-scrollbar {
  width: 0.625rem;
  height: 0.625rem;
}
::-webkit-scrollbar-thumb {
  background: #111;
  border-radius: 0.3125rem;
  box-shadow: inset 0.125rem 0.125rem 0.125rem rgba(255, 255, 255, 0.25),
    inset -0.125rem -0.125rem 0.125rem rgba(0, 0, 0, 0.25);
  cursor: default;
}
::-webkit-scrollbar-track {
  background: #333;
}
html, body {
  height: 100vh;
  height: 100dvh;
  margin: 0;
  overflow: hidden;
}
body {
  display: grid;
  grid-template-rows: calc(100dvh - 4rem) 4rem;
  font-family: system-ui, sans-serif;
}
canvas, .editor {
  grid-row: 1;
  grid-column: 1;
}
canvas {
  width: 100%;
  height: auto;
  object-fit: contain;
  background: repeating-linear-gradient(45deg, #f3f3f3, #f3f3f3 10px, #e3e3e3 10px, #e3e3e3 20px);
  touch-action: none;
}
.editor, .overlay, #error {
  background: #1116;
  padding: 1em;
}
.editor {
  color: #fefefe;
  tab-size: 2;
  border: none;
  resize: none;
}
.editor:focus {
  outline: none;
}
#error {
  grid-row: 2;
  grid-column: 1;
  min-height: 4rem;
  padding-block: 0;
  color: firebrick;
  overflow: auto;
}
#indicator {
  visibility: hidden;
  position: absolute;
  top: calc(var(--top, 0px) - var(--scroll-top, 0px));
  width: 0; 
  height: 0; 
  border-top: 10px solid transparent;
  border-bottom: 10px solid transparent;
  border-left: 10px solid firebrick;
  transform: translateY(-25%);
}
.overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  margin: 0;
}
.editor, .overlay {
  font-size: 1rem;
  line-height: 1.2;
  white-space: pre;
}
#controls {
  display: flex;
  gap: .25em;
  position: fixed;
  top: 1em;
  right: 1em;
}
.hidden {
  display: none;
}
input {
  all: unset;
  width: 3rem;
  height: 2rem;
  opacity: .2;
  filter: saturate(0) invert(1);
  cursor: pointer;
  transition: opacity 500ms ease-in-out;
  text-align: center;
  vertical-align: middle;
}
input:hover {
  opacity: 1;
}
#btnToggleView::after {
  content: 'üëÅ';
}
#btnToggleView:checked::after {
  content: '‚úèÔ∏è';
}
#btnToggleResolution::after {
  content: '1Ô∏è‚É£';
}
#btnToggleResolution:checked::after {
  content: '2Ô∏è‚É£';
}
#btnReset::after {
  content: '‚èÆÔ∏è';
}